/**
 * Provides various helper functions to the application.
 * 
 * @module services/helper
 */
define(function () {

    var helper = {
        addAntiForgeryToken: addAntiForgeryToken,
        removeCommonTenants: removeCommonTenants
    };

    return helper;

    /** 
     * Appends the anti-forgery token generated by the server
     * onto the object passed as a parameter.
     * 
     * @name module:services/helper#addAntiForgeryToken
     * @public
     * @function
     * @param {Object} data - Object to have the token appended.
     */
    function addAntiForgeryToken(data) {

        // Get token from the hidden form and add it as a new attribute to object
        data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();

        return data;
    }

    /** 
    * Removes tenants from the first list who are also members of the second.
    * 
    * @name module:services/helper#removeCommonTenants
    * @public
    * @function
    * @param {Object} firstTenantsListObservable - Observable array containing tenants list to filter.
    * @param {Object} secondTenantsListObservable - Observable array containing tenants to compare with the first.
    */
    function removeCommonTenants(firstTenantsListObservable, secondTenantsListObservable) {

        firstTenantsListObservable(firstTenantsListObservable().filter(filterTenants));

        function filterTenants(tenant) {
            var results = $.grep(secondTenantsListObservable(), isTenantInSecondList);

            function isTenantInSecondList(secondTenantListUser) {
                return secondTenantListUser.User().Id() === tenant.Id();
            }

            // If user is not in the active convo, include them in tenants list
            return results.length === 0;
        }
    }
});